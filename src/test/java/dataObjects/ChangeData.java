package dataObjects;

import java.util.List;

public class ChangeData extends dataUtil{
    public String Requestor;
    public String ITService;
    public String Component;
    public String PrimaryConfigItem;
    public String LegacyAssetID;
    public String Urgency;
    public String StandardChange;
    public String ChangeTitle;
    public String ChangeType;
    public String Source;
    public String TFSReference;
    public String SupplierReference;
    public String AssignmentGroup;
    public String AssignedTo;
    public String DateEmailReceived;
    public String Description;
    public String ReasonForChange;
    public String OffToolCI;
    public String ChangeBenefits;
    public String RevokeReason;
    public String ImpactofNoChange;
    public String ChangeClassification;
    public String AcceptExpedite;
    public String Location;
    public String CustomerNotes;
    public String WorkNotes;
    public String StartDateTime;
    public String EndDateTime;
    public String JustificationToExpedite;
    public String PostImplVerificationSteps;
    public String ImplementationPlanAttached;
    public String ImplementationPlan;
    public String PreImplTestEvidenceAttached;
    public String BackoutPlanAttached;
    public String ImplementationSupplier;
    public String VerificationSteps;
    public String RelatedParent;
    public String RelatedRelease;
    public String PIR;
    public String PIRReason;
    public String PIRDate;
    public String ClosureNotes;
    public String Knowledge;
    public String ClosedStatus;
    public String LeadTimeConflict;
    public String LockAssessments;
    public String Template;

    public void initialize(List<List<String>> data){
        this.Requestor = getData("Requestor", data, this.Requestor);
        this.ITService = getData("ITService", data, this.ITService);
        this.Component = getData("Component", data, this.Component);
        this.PrimaryConfigItem = getData("PrimaryConfigItem", data, this.PrimaryConfigItem);
        this.LegacyAssetID = getData("LegacyAssetID", data, this.LegacyAssetID);
        this.Urgency = getData("Urgency", data, this.Urgency);
        this.StandardChange = getData("StandardChange", data, this.StandardChange);
        this.ChangeTitle = getData("ChangeTitle", data, this.ChangeTitle);
        this.ChangeType = getData("ChangeType", data, this.ChangeType);
        this.Source = getData("Source", data, this.Source);
        this.TFSReference = getData("TFSReference", data, this.TFSReference);
        this.SupplierReference = getData("SupplierReference", data, this.SupplierReference);
        this.AssignmentGroup = getData("AssignmentGroup", data, this.AssignmentGroup);
        this.AssignedTo = getData("AssignedTo", data, this.AssignedTo);
        this.DateEmailReceived = getData("DateEmailReceived", data, this.DateEmailReceived);
        this.Description = getData("Description", data, this.Description);
        this.ReasonForChange = getData("ReasonForChange", data, this.ReasonForChange);
        this.OffToolCI = getData("OffToolCI", data, this.OffToolCI);
        this.ChangeBenefits = getData("ChangeBenefits", data, this.ChangeBenefits);
        this.RevokeReason = getData("RevokeReason", data, this.RevokeReason);
        this.ImpactofNoChange = getData("ImpactofNoChange", data, this.ImpactofNoChange);
        this.ChangeClassification = getData("ChangeClassification", data, this.ChangeClassification);
        this.AcceptExpedite = getData("AcceptExpedite", data, this.AcceptExpedite);
        this.Location = getData("Location", data, this.Location);
        this.CustomerNotes = getData("CustomerNotes", data, this.CustomerNotes);
        this.WorkNotes = getData("WorkNotes", data, this.WorkNotes);
        this.StartDateTime = getData("StartDateTime", data, this.StartDateTime);
        this.EndDateTime = getData("EndDateTime", data, this.EndDateTime);
        this.JustificationToExpedite = getData("JustificationToExpedite", data, this.JustificationToExpedite);
        this.PostImplVerificationSteps= getData("PostImplVerificationSteps", data, this.PostImplVerificationSteps);
        this.ImplementationPlanAttached = getData("ImplementationPlanAttached", data, this.ImplementationPlanAttached);
        this.ImplementationPlan = getData("ImplementationPlan", data, this.ImplementationPlan);
        this.PreImplTestEvidenceAttached  = getData("PreImplTestEvidenceAttached", data, this.PreImplTestEvidenceAttached);
        this.BackoutPlanAttached = getData("BackoutPlanAttached", data, this.BackoutPlanAttached);
        this.ImplementationSupplier = getData("ImplementationSupplier", data, this.ImplementationSupplier);
        this.VerificationSteps = getData("VerificationSteps", data, this.VerificationSteps);
        this.RelatedParent = getData("RelatedParent", data, this.RelatedParent);
        this.RelatedRelease = getData("RelatedRelease", data, this.RelatedRelease);
        this.PIR = getData("PIR", data, this.PIR);
        this.PIRReason = getData("PIRReason", data, this.PIRReason);
        this.PIRDate = getData("PIRDate", data, this.PIRDate);
        this.ClosureNotes = getData("ClosureNotes", data, this.ClosureNotes);
        this.Knowledge = getData("Knowledge", data, this.Knowledge);
        this.ClosedStatus = getData("ClosedStatus", data, this.ClosedStatus);
        this.LeadTimeConflict = getData("LeadTimeConflict", data, this.LeadTimeConflict);
        this.LockAssessments = getData("LockAssessments", data, this.LockAssessments);
        this.Template = getData("Template", data, this.Template);
    }
}
